name: aws exam ci pipeline
run-name: aws exam ci pipeline run on ${{ github.event_name }} event

on:
    push:
      branches:
        - 'main'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
  AWS_REGION: "eu-central-1"
  TF_ROOT: "terraform"
#  GITHUB_NAME: "metodil/u34-fun-facts"
#  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_TF_INFRA_AWS }}
#  INFRACOST_SLACK_MESSAGE: "/tmp/infracost-common-slack-message.json"



jobs:

#  format-and-check-code:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - uses: editorconfig-checker/action-editorconfig-checker@main
#      - run: editorconfig-checker
#      - name: Set up Python
#        uses: actions/setup-python@v5
#        with:
#          python-version: '3.11.8'
#          cache: 'pip'
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install flake8 black pylint
#      - name: Run black formatting
#        run: black --check --diff terraform/lambda/
#      - name: Run flake8 linting
#        run: |
#          cd terraform/lambda
#          flake8 .
##      - name: Test with pytest
##        run: |
##          cd app
##          python -m unittest app_test.py


  terraform-common:
    runs-on: ubuntu-latest
#    needs: [ format-and-check-code ]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3.1.1

      - name: Terraform Init
        id: init
        run: |
          cd ${{ env.TF_ROOT }}
          terraform init

      - name: Format Terraform Code
        run: |
          cd ${{ env.TF_ROOT }}
          terraform fmt -check -diff || exit 0

      - name: Terraform Validate
        id: validate
        run: |
          cd ${{ env.TF_ROOT }}
          terraform validate

#      - name: Setup Infracost
#        uses: infracost/actions/setup@v3
#        with:
#          api-key: ${{ secrets.INFRACOST_API_KEY }}
#
#      - name: Generate Infracost cost estimate baseline
#        run: |
#          infracost breakdown --path=${TF_ROOT} \
#                              --format=json \
#                              --out-file=/tmp/infracost-common.json
#
#      - name: Post Infracost comment
#        run: |
#            touch grype.yaml
#            infracost comment github --path=/tmp/infracost-common.json \
#                                     --repo=${{ env.GITHUB_NAME }} \
#                                     --github-token=${{ secrets.U34_FP_GITHUB_TOKEN }} \
#                                     --behavior=hide-and-new \
#                                     --commit=${{ github.sha }}
##                                     --pr=${{ github.event.pull_request.number }}
#
#      - name: Post Infracost comment
#        run: |
#          touch ${{ env.INFRACOST_SLACK_MESSAGE }}
#          infracost output  --path=/tmp/infracost-common.json \
#                            --format slack-message \
#                            --out-file ${{ env.INFRACOST_SLACK_MESSAGE }}

      - name: Terraform Plan
        id: plan
        run: |
            cd ${{ env.TF_ROOT }}
            terraform plan -out=tfplan-common -detailed-exitcode
            echo "TF_EXIT_CODE=$?" >> $GITHUB_ENV

      - name: Terraform Apply if changes detected
        run: |
          cd ${{ env.TF_ROOT }}
          terraform refresh
          terraform destroy --auto-approve
          terraform apply --auto-approve tfplan-common
